let e;const t={INP:"inp",TTFB:"ttfb",CLS:"cls",FCP:"fcp",LCP:"lcp"};let l={},n=null,o=null,a=null,s=null;const c={INIT:e=>{n=e.data.allowedMetrics,l=e.data.allowedLinks,s=e.data.platformApiHost,console.log("INIT")},SET_COUNTRY:e=>{o=e.data.country,console.log("SET_COUNTRY")},METRIC:c=>{if(console.log("METRIC",o,s),!o||!s)return;let{collectedMetrics:r,metricName:i,metricData:p}=c.data;a||(a=function(e,t){let l=null,n=-1;for(let o in t)if(Object.prototype.hasOwnProperty.call(t,o)){let a=t[o];if((function(e){let t=e.replace(/[.*+?^${}()|[\]\\]/g,"\\$&");return t=t.replace(/:[^/]+/g,"[^/]+"),new RegExp(t=`^${t}/?$`)})(a).test(e)){let e=a.split("/").filter(e=>e&&!e.startsWith(":")).length;e>n&&(n=e,l=a)}}return l||e}(c.data.pathname||"/",l));let T=Object.keys(r);console.log("METRICs",T),n.every(e=>T.includes(e))&&(clearTimeout(e),e=setTimeout(()=>{let e={...T.reduce((e,l)=>({...e,[t[l]]:r[l]}),{}),[t[i]]:p,country:o,uriPath:a};fetch(`${s}/api/v2/web-performance/metrics`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e),keepalive:!0}).then(()=>{self.postMessage({type:"BATCH_METRICS_SENT"})})},1e3))}};self.onmessage=function(e){e.data&&c[e.data.type]?.(e)};